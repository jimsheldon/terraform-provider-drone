kind: pipeline
type: docker
name: default

trigger:
  branch:
  - main

services:
- name: drone
  image: drone/drone:2.12.1
  environment:
    DRONE_GITEA_SERVER: "http://invalid"
    DRONE_GITEA_CLIENT_ID: abcdefg
    DRONE_GITEA_CLIENT_SECRET: hijklmnop
    DRONE_LOGS_DEBUG: true
    DRONE_LOGS_TEXT: true
    DRONE_RPC_SECRET: qrstuvwxyz
    DRONE_USER_CREATE: "username:drone,machine:false,admin:true,token:55241de264decc58e8a2b2d90728702c"

steps:
- name: drone wait
  image: curlimages/curl:7.83.1
  commands:
  # Checks to see that localstack service is up and running
  - until curl --silent --max-time 1 http://drone/healthz; do echo -n . && sleep 1; done

- name: run tests
  image: golang:1.16
  environment:
    DRONE_SERVER: http://drone
    DRONE_TOKEN: 55241de264decc58e8a2b2d90728702c
    DRONE_USER: test
    TF_ACC: 1
  commands:
  - go test -v ./...

- name: fetch tags
  image: alpine/git
  commands:
  - git fetch --tags
  when:
    ref:
    - refs/tags/v**

- name: goreleaser
  image: goreleaser/goreleaser:v1.10.1
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
    GPG_FINGERPRINT:
      from_secret: gpg_fingerprint
    GPG_PASSWORD:
      from_secret: gpg_password
    GPG_PRIVATE_KEY:
      from_secret: gpg_private_key
  commands:
  - apk update
  - apk add gpg-agent
  - echo -e "$GPG_PRIVATE_KEY}" | gpg --import --batch --no-tty
  - goreleaser release --skip-publish
  when:
    ref:
    - refs/tags/v**